Last login: Tue Oct 29 16:54:50 on ttys001
/Library/PostgreSQL/17/scripts/runpsql.sh; exit                                                                                                                                                           
(base) zhiyuanchen@MacBookAir ~ % /Library/PostgreSQL/17/scripts/runpsql.sh; exit
Server [localhost]: 
Database [postgres]: 
Port [5435]: 
Username [postgres]: 
Password for user postgres: 
psql (17.0)
Type "help" for help.

postgres=# -- Pull total number of orders that were completed in March 2024
postgres=# SELECT COUNT(sales.order_id) AS total_orders_march_2024
postgres-# FROM sales
postgres-# WHERE sales.date BETWEEN '2024-03-01' AND '2024-03-31';
 total_orders_march_2024 
-------------------------
                      12
(1 row)

postgres=# 
postgres=# 
postgres=# -- Pull total number of orders that were completed in March 2024 with the first name ‘John’ and last name Doe’
postgres=# SELECT COUNT(sales.order_id) AS total_orders_john_doe_march_2024
postgres-# FROM sales
postgres-# LEFT JOIN customers ON sales.customer_id = customers.customer_id
postgres-# WHERE sales.date BETWEEN '2024-03-01' AND '2024-03-31'
postgres-#   AND customers.first_name = 'John'
postgres-#   AND customers.last_name = 'Doe';
 total_orders_john_doe_march_2024 
----------------------------------
                                0
(1 row)

postgres=# 
postgres=# 
postgres=# -- Pull total number of customers that purchased in April 2024 and the average amount spend per customer
postgres=# SELECT 
postgres-#     COUNT(DISTINCT sales.customer_id) AS total_customers,
postgres-#     AVG(sales.revenue) AS average_spent_per_customer
postgres-# FROM 
postgres-#     sales
postgres-# WHERE 
postgres-#     sales.date BETWEEN '2024-04-01' AND '2024-04-30';
 total_customers | average_spent_per_customer 
-----------------+----------------------------
               1 |        60.0000000000000000
(1 row)

postgres=# 
postgres=# 
postgres=# -- Pull the departments that generated less than $600 in April 2024
postgres=# SELECT 
postgres-#     items.department,
postgres-#     SUM(sales.revenue) AS total_revenue
postgres-# FROM 
postgres-#     items
postgres-# JOIN 
postgres-#     sales ON items.item_id = sales.item_id
postgres-# WHERE 
postgres-#     sales.date BETWEEN '2024-04-01' AND '2024-04-30'
postgres-# GROUP BY 
postgres-#     items.department
postgres-# HAVING 
postgres-#     SUM(sales.revenue) < 600;
 department | total_revenue 
------------+---------------
 Clothing   |        180.00
(1 row)

postgres=# 
postgres=# 
postgres=# -- What is the most and least revenue we have generated by an order
postgres=# SELECT 
postgres-#     MAX(revenue) AS most_revenue,
postgres-#     MIN(revenue) AS least_revenue
postgres-# FROM 
postgres-#     sales;
 most_revenue | least_revenue 
--------------+---------------
      2400.00 |         60.00
(1 row)

postgres=# 
postgres=# 
postgres=# -- What were the orders that were purchased in our most lucrative order
postgres=# SELECT *
postgres-# FROM sales
postgres-# WHERE revenue = (SELECT MAX(revenue) FROM sales);
 order_id | item_id | customer_id | quantity | revenue |    date    
----------+---------+-------------+----------+---------+------------
        7 |       1 |           2 |        2 | 2400.00 | 2024-03-01
       13 |       1 |           2 |        2 | 2400.00 | 2024-03-01
       19 |       1 |           2 |        2 | 2400.00 | 2024-03-01
(3 rows)
